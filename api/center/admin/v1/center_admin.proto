syntax = "proto3";

package center.admin.v1;
import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "api/center/admin/v1;v1";

service CenterAdmin {
	rpc Login(LoginReq) returns (LoginReply) {
		option (google.api.http) = {
			post: "/admin/v1/login",
			body: "*"
		};
	}

	rpc Logout(LogoutReq) returns (LogoutReply) {
		option (google.api.http) = {
			post: "/admin/v1/logout",
			body: "*"
		};
	}

	rpc GetUser(GetUserReq) returns (GetUserReply) {
		option (google.api.http) = {
			get: "/admin/v1/users/{id}"
		};
	}

	rpc ListUser (ListUserReq) returns (ListUserReply) {
		option (google.api.http) = {
			get: "/admin/v1/users",
		};
	}

	rpc DeactivateUser (UserIdReq) returns (UserOkReply) {
		option (google.api.http) = {
			put: "/admin/v1/users/{id}/deactivate",
			body: "*"
		};
	}

	rpc ActivateUser (UserIdReq) returns (UserOkReply) {
		option (google.api.http) = {
			put: "/admin/v1/users/{id}/activate",
			body: "*"
		};
	}
}

message LoginReq {
	string username = 1 [(validate.rules).string.min_len = 4];
	string password = 2 [(validate.rules).string.min_len = 5];
}

message LoginReply {
	string token = 1;
}

message LogoutReq {

}

message LogoutReply {

}

message GetUserReq {
	int64 id = 1;
}

message GetUserReply {
	int64 id = 1;
	string username = 2 [(validate.rules).string.min_len = 4];
	bool isActive = 3;
}

message ListUserReq {
	int32 pageIndex = 1;
	int32 pageSize = 2;
}

message ListUserReply {
	message User {
		int64 id = 1;
		string username = 2;
	}
	repeated User results = 1;
	int64 total = 2;
}

message UserIdReq {
	int64 id = 1;
}

message UserOkReply {
	bool ok = 1;
}